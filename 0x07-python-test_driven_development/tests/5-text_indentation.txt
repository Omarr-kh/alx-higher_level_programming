# 5-text_indentation.txt

================================
How to Use 5-text_indentation.py
================================

This module defines a text-indentation function ``text_indentation(text)``.

Usage
=====

Text is printed with two new lines after each of the characters ``.``, ``?``,
and ``:``.

::

    >>> from 5-text_indentation import text_indentation
    >>> text_indentation("Testing?")
    Testing?
    <BLANKLINE>

No spaces are printed at the beginning of a line.

::

    >>> text_indentation("   Hello, World.")
    Hello, World.
    <BLANKLINE>

::

    >>> text_indentation("      ")

Similarly, no spaces are printed at the end of each printed line.

::

    >>> text_indentation("Hello.      ")
    Hello.
    <BLANKLINE>

::

    >>> text_indentation("   Can I do this.   may be hard to do.     ")
    Can I do this.
    <BLANKLINE>
    may be hard to do.
    <BLANKLINE>

New lines are only printed for the characters ``.``, ``?``, and ``:`` -
text not ending with one of these characters is not ended with a new line.

::

    >>> text_indentation("none of the characters are here")
    none of the characters are here

New lines are printed as normal.

::

    >>> text_indentation("This is a new line! Look:\nNice.")
    This is a new line! Look:
    <BLANKLINE>
    <BLANKLINE>
    nNice.
    <BLANKLINE>

::

    >>> text_indentation("\n\n Two lines printed.")
    <BLANKLINE>
    <BLANKLINE>
    Two lines printed.
    <BLANKLINE>

::
    >>> text_indentation("Another newline \n new line.")
    Another newline 
    new line.
    <BLANKLINE>

A bigger example:

::

    >>> text_indentation("Lorem ipsum dolor sit amet, consectetur adipiscing "
    ... "elit. Quonam modo? Utrum igitur tibi litteram videor an totas paginas "
    ... "commovere? Non autem hoc: igitur ne illud quidem. Fortasse id optimum, "
    ... "sed ubi illud: Plus semper voluptatis? Teneo, inquit, finem illi videri "
    ... "nihil dolere. Transfer idem ad modestiam vel temperantiam, quae est "
    ... "moderatio cupiditatum rationi oboediens. Si id dicis, vicimus. Inde "
    ... "sermone vario sex illa a Dipylo stadia confecimus. Sin aliud quid "
    ... "voles, postea. Quae animi affectio suum cuique tribuens atque hanc, "
    ... "quam dico. Utinam quidem dicerent alium alio beatiorem! Iam ruinas "
    ... "videres") # doctest: +NORMALIZE_WHITESPACE
    Lorem ipsum dolor sit amet, consectetur adipiscing elit.
    <BLANKLINE>
    Quonam modo?
    <BLANKLINE>
    Utrum igitur tibi litteram videor an totas paginas commovere?
    <BLANKLINE>
    Non autem hoc:
    <BLANKLINE>
    igitur ne illud quidem.
    <BLANKLINE>
    Fortasse id optimum, sed ubi illud:
    <BLANKLINE>
    Plus semper voluptatis?
    <BLANKLINE>
    Teneo, inquit, finem illi videri nihil dolere.
    <BLANKLINE>
    Transfer idem ad modestiam vel temperantiam, 
    quae est moderatio cupiditatum rationi oboediens.
    <BLANKLINE>
    Si id dicis, vicimus.
    <BLANKLINE>
    Inde sermone vario sex illa a Dipylo stadia confecimus.
    <BLANKLINE>
    Sin aliud quid voles, postea.
    <BLANKLINE>
    Quae animi affectio suum cuique tribuens atque hanc, quam dico.
    <BLANKLINE>
    Utinam quidem dicerent alium alio beatiorem! Iam ruinas videres

Invalid Text input
====================

The paramter ``text`` must be a string. else, a TypeError is raised.

::

    >>> text_indentation(75)
    Traceback (most recent call last):
    TypeError: text must be a string

::

    >>> text_indentation({"hey": 515, "Omar": 252})
    Traceback (most recent call last):
    TypeError: text must be a string

::

    >>> text_indentation(None)
    Traceback (most recent call last):
    TypeError: text must be a string

